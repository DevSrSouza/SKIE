name: Integration Tests

on:
  workflow_dispatch:

jobs:
  tests:
    strategy:
      matrix:
        os: [ macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Cache Gradle Caches
        uses: gradle/gradle-build-action@v2
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          IOS_PROVISION_PROFILE_BASE64: ${{ secrets.IOS_PROVISION_PROFILE_BASE64 }}
          TVOS_PROVISION_PROFILE_BASE64: ${{ secrets.TVOS_PROVISION_PROFILE_BASE64 }}
          MACOS_PROVISION_PROFILE_BASE64: ${{ secrets.MACOS_PROVISION_PROFILE_BASE64 }}
          WATCHOS_APP_PROVISION_PROFILE_BASE64: ${{ secrets.WATCHOS_APP_PROVISION_PROFILE_BASE64 }}
          WATCHOS_EXT_PROVISION_PROFILE_BASE64: ${{ secrets.WATCHOS_EXT_PROVISION_PROFILE_BASE64 }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          PP_IOS_PATH=$RUNNER_TEMP/build_ios_pp.mobileprovision
          PP_TVOS_PATH=$RUNNER_TEMP/build_tvos_pp.mobileprovision
          PP_MACOS_PATH=$RUNNER_TEMP/build_macos_pp.mobileprovision
          PP_WATCHOS_APP_PATH=$RUNNER_TEMP/build_watchos_app_pp.mobileprovision
          PP_WATCHOS_EXT_PATH=$RUNNER_TEMP/build_watchos_ext_pp.mobileprovision

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$IOS_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_IOS_PATH
          echo -n "$TVOS_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_TVOS_PATH
          echo -n "$MACOS_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_MACOS_PATH
          echo -n "$WATCHOS_APP_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_WATCHOS_APP_PATH
          echo -n "$WATCHOS_EXT_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_WATCHOS_EXT_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_IOS_PATH ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_TVOS_PATH ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_MACOS_PATH ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_WATCHOS_APP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_WATCHOS_EXT_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Run Gradle tasks
        run: './gradlew :example:integrationTests'
      - name: Stop Gradle
        if: always()
        run: ./gradlew --stop
      - name: Archive xcodebuild logs
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: xcodebuild-logs
          path: example/build/test-suite/**/xcodebuild_*.log
